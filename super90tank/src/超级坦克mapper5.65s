			.ORG $b600	;>>3600
;+程序索引			
			CMP #$00	;程序索引
			BEQ M0
			CMP #$01
			BEQ M1
			CMP #$02
			BEQ M2
			CMP #$03
			BEQ M3
			CMP #$04
			BEQ M4
			CMP #$05
			BEQ M5
			CMP #$06
			BEQ M6
			CMP #$07
			BEQ M7
			CMP #$08
			BEQ M8
			CMP #$09
			BEQ M9
			CMP #$10
			BEQ M10
			CMP #$0a
			BEQ MA
			CMP #$ff
			BEQ MFF
			RTS
			
M0			JMP c61b	;我方坦克吃枪处理
M1			JMP dc09	;坦克速度属性
M2			jmp e7f2	;ai坦克爆炸速度处理
M3			JMP ff7a	;我方坦克爆炸处理
M4			JMP e7ea	;水泥弹减速效果
M5			JMP fe19	;我方坦克吃五星
M6			JMP fe09	;ai坦克吃五星
M7			JMP e7cc	;坦克穿甲弹设计
M8			JMP c01f	;游戏按键设计
M9			JMP e099	;特种弹发射处理
MA			JMP fe26	;吃炸弹处理
M10			JMP d413	;ppu显示部分;
MFF			JMP 内存修改 ;-

;2018.7.21
;pppoe
;+c607我方坦克吃枪处理
c61b			LDA $5c1a,x
			CMP #$64
			BCS ext		;防止弹仓数量溢出
			CLC
			ADC #$05
			STA $5c1a,x
			
			LDA $178,x	;读取子弹属性
			CMP #$a0
			BCS +
			LDA #$a0
			STA $178,x
ext			RTS
			
+			CMP #$d0	
			BCS ext
			CLC
			ADC #$10
			STA $178,x	;写入子弹属性

			
+			LDA $178,x
			CMP #$b1
			BCS +
			LDA $a8,x
			ORA #$01
			STA $a8,x
			STA $101,x
			LDA #$b1
			STA $178,x
			RTS
			
+			LDA #$c0
			STA $178,x
			RTS
			;-
			
;2018.7.28
;pppoe
;+;dc09坦克速度属性		.ORG $bd20	;<<DC09
dc09			LDA $0b
			AND #$01
			BNE y1
			LDA $0b
			AND #$03
			BNE y2

;ai坦克拥有速度属性dc35<<
y1			LDA $5c10,x
			CMP #$0
			BEQ 计时器	;定时设计
			
			LDA $0b
			CMP #$80
			BEQ 计时器减
			CMP #$ff
			BEQ 计时器减
			JMP dc09t1
计时器减			DEC $5c10,x

dc09t1			LDA $5c00,x
			BMI j1		;减速调用
			CMP #$1
			BEQ j2		;加速调用
计时器			LDA #$0		;计时器0时恢复速度属性
			STA $5c00,x
			
move			JSR $dc3d
			RTS

			
y2			PLA
			PLA
			JMP $dc38
			
j1			LDA $5c08,x 	;减速效果设计
			CMP #$01
			BNE j11
			DEC $5c08,x
			JMP move
j11			INC $5c08,x
			RTS
			
j2			LDA #$01	;加速效果设计
			STA $15
move1			JSR $dc3d
			DEC $15
			BPL move1
			INC $15
			RTS
			;-
			
;2018.7.28
;pppoe
;+;我方坦克吃五星	.ORG $bd60	;<<fe18
fe19		LDA $5c00,x
		CMP #$01
		BEQ fe19ext
		LDA #$14
		STA $5c10,x
		INC $5c00,x
		
		LDA $5c1a,x	;增加特种弹
		CLC
		ADC #$5
		STA $5c1a,x
		
		;LDA $101,x
		;CMP #$60
		;BCS fe19ext
		;CLC
		;ADC #$20
		;STA $101,x
		;STA $a8,x
fe19ext		RTS;- 
		
;2018.8.12
;pppoe
;+;ai坦克吃五星加速		.ORG $bdd0	;<<fe09
fe09			LDA #$14
			STA $5c10,x
			LDA $5c00,x
			CMP #$01
			BEQ fe09ext
			INC $5c00,x
fe09ext			RTS;-

;2018.8.12
;pppoe
;+;ai坦克爆炸速度处理	.ORG $bdc0	;<<E7f2
e7f2			LDA #$0		;坦克爆炸速度初始化
			STA $5c00,x
			STA $5c10,x	;坦克计时器初始化
			TXA
			PHA
			TYA
			JSR 坦克经验	;坦克经验计算
			PLA
			TAX
			JSR $e3ef

			LDA $89,y	;防护罩判断
			CMP #$0
			BNE e7f2ext
	
			JSR 碰撞检测	;我方爆炸减速伤害
e7f2ext			LDA #$01
			RTS;-
			
;2018.10.18
;pppoe
;+吃炸弹初始化
fe26			LDA #$0
                        LDY #$1
fe261			STA $5c00,y
			STA $5c10,y
			STA $5c26,y	;死亡经验清零
			LDA #$0a
			STA $5c1a,y	;死亡初始化弹仓
			DEY
			BPL fe261
			LDA #$01
			STA $5a
			STA $30a
			RTS;-
			
;2018.8.12
;pppoe
;+;碰撞检测		.ORG $bde0
碰撞检测			JSR jc1		;1p碰撞检测
			JSR jc2		;2p碰撞检测
			RTS
			
			
jc1			LDA $90,x
			SEC
			SBC $90
			CMP #$1f
			BCC q1
			CMP #$e6
			BCS q1
			RTS
			
			
q1			LDA $98,x
			SEC
			SBC $98
			CMP #$1f
			BCC q11
			CMP #$e6
			BCS q11
			RTS
			
q11			LDA #$03
			STA $5c10,y
			LDA $5c00
			CMP #$ff
			BEQ bdext
			DEC $5c00
			RTS
			
jc2			LDA $90,x
			SEC
			SBC $91
			CMP #$1f
			BCC q2
			CMP #$e6
			BCS q2
			RTS
			
			
q2			LDA $98,x
			SEC
			SBC $99
			CMP #$1f
			BCC q21
			CMP #$e6
			BCS q21
			RTS
			
q21			LDA #$03
			STA $5c10,y
			LDA $5c01
			CMP #$ff
			beq bdext
			DEC $5c01
bdext			RTS;-
			
;2018.7.28
;pppoe
;+;我方坦克爆炸处理	.ORG $be30	;<<ff7a
			;CPX #$02
			;BCS q1
ff7a			LDA #$0
			STA $5c00,x
			STA $5c10,x
			STA $5c26,x	;死亡经验清零
			;LDA #$0a
			STA $5c1a,x	;初始化弹仓
			TXA
			PHA
			CPX #$01
			BEQ ai2
			JSR ai1
extff7a			PLA
			TAX
			LDA #$73
			STA $a0,x
			PLA
			PLA
			JMP $e763
			RTS
			
ai1			LDX #$02			
e2			LDA $90		;1p坦克爆炸检测
			SEC
			SBC $90,x
			CMP #$1c
			BCC a1
			CMP #$e6
			BCS a1
			JMP e1
			
a1			LDA $98
			SEC
			SBC $98,x
			CMP #$1c
			BCC a11
			CMP #$e6
			BCS a11
			JMP e1
			
a11			LDA #$03
			STA $5c10,x
			
			LDA #$ff
			STA $5c00,x
e1			INX
			CPX #$7
			BNE e2
			RTS
			
ai2			LDX #$02			
e22			LDA $91		;2p坦克爆炸检测
			SEC
			SBC $90,x
			CMP #$1c
			BCC a2
			CMP #$e6
			BCS a2
			JMP e21
			
a2			LDA $99
			SEC
			SBC $98,x
			CMP #$1c
			BCC a21
			CMP #$e6
			BCS a21
			JMP e21
			
a21			LDA #$03
			STA $5c10,x
			
			LDA #$ff
			STA $5c00,x
e21			INX
			CPX #$7
			BNE e22
			JMP extff7a;-
			
			
;2018.8.12
;pppoe
;+;水泥弹减速效果		.ORG $bd8e	;<<e7ea
e7ea			LDA #$01
			STA $30e
			
			CPY #$1
			BNE e7eap1
			;LDA $179	;2p判断
			;LDA $5c1d
			LDA $a9
e7eaext1		AND #$01
			BNE e7ead1
			RTS
e7ead1			LDA #$05
			STA $5c10,x
			LDA $5c00,x	;坦克被击中减速
			CMP #$ff
			BEQ e7eaext
			DEC $5c00,x
e7eaext			RTS
			
e7eap1			;LDA $178	;1p判断
			;LDA $5c1c
			lda $a8
			JMP e7eaext1;-
						
			
;2018.8.21
;哥只是个传说，pppoe
;+;<<e0b2		穿甲弹设计

e7cc			CPY #$2		;子弹偏移量
			BCC e7ccq1
			CPY #$8
			BCS e7ccq1

e7ccext			LDA #$33
			STA $cc,y
			RTS
			
e7ccq1			CPY #$0		;1号子弹判断
			BEQ e7cc1p
			CPY #$8
			BEQ e7cc1p	;2号子弹判断
			;LDA $179
			LDA $5c1d
			CMP #$c0
			BCC e7ccext
			RTS
			
e7cc1p			;lda $178
			LDA $5c1c	;1p判断
			CMP #$c0
			BCC e7ccext
			RTS
			;-
			
			
;2018.9.1
;pppoe
;+坦克经验处理
坦克经验			TAX
			CPX #$0
			BEQ 经验1
			CPX #$8
			BEQ 经验1
			
			LDX #$01
经验2			INC $5c26,x
			LDA $5c26,x
			SEC
			SBC #$4c
			BPL tank4
			LDA $5c26,x
			SEC
			SBC #$3c
			BPL tank3
			LDA $5c26,x
			SEC
			SBC #$1e
			BPL tank2
			LDA $5c26,x
			SEC
			SBC #$0a
			BPL tank1
			RTS
			
			
			
			
经验1			LDX #$0
			JMP 经验2
			
tank1			LDA $a8,x
			CMP #$20		
			BCS tank11
			JSR 属性写入
			JSR 声音1
tank11			RTS
			
tank2			LDA $a8,x
			CMP #$40
			BCS tank21
			JSR 属性写入
			JSR 声音1
tank21			RTS
			
tank3			LDA $a8,x
			CMP #$60
			BCS tank31
			JSR 属性写入
			JSR 声音1
tank31			RTS

tank4			;LDA $a8,x	;升级成水泥弹
			;CMP #$61
			;BCS tank41
			;LDA #$61
			;JSR 属性写入
			;JSR 声音1
			LDA $5c1a,x
			CLC
			ADC #$05	;增加特种弹数量
			STA $5c1a,x
			LDA #$3b
			STA $5c26,x
			RTS


声音1			LDA #$01
			STA $306
			RTS
			
属性写入			CLC
			ADC #$20
			STA $101,x
			STA $a8,x
			RTS;-
			
			
;2018.9.1
;pppoe
;+游戏按键设计
c01f			LDA $08,x	;按键弹起判断
			CMP $16,x
			BEQ c01fext
			STA $16,x
			LDA $08,x
			AND #$01
			BNE A键按下	;a键按下时处理
			RTS
		
;			LDA $06,x	;按键弹起判断
;			CMP $18,x
;			BEQ c01fext
;			STA $18,x
			
;			LDA $06,x
;			AND #$04
;			BNE select按下	;select键按下时处理
;c01fext			RTS

A键按下			LDA $5c1a,x	;弹仓为0时不能发射 e13a>>cmp #$等级 触发特种弹
			CMP #$0
			BEQ c01fext
			JMP $e136
c01fext			RTS
			
;select按下		LDA $5c1c,x
;			CMP #$0
;			BEQ c01fq21
;			CMP #$c0
;			BEQ c01fq21
;			CLC
;			ADC #$10
;			STA $5c1c,x
;			RTS
			
;c01fq21		LDA #$a0
;			STA $5c1c,x
;			RTS
			;-
			
			
;2018.9.2
;pppoe
;+发射炮弹处理
e099			CPX #$02	;判断12p行动
			BCS e136ext
			
			LDA $06,x
			CMP #$01	;b键判断
			BNE e136ext
			LDA $c0,x
			CMP $90,x
			
			LDA $5c1a,x	;判断弹仓是否为0
			CMP #$0
			BEQ e136ext
			
			LDA $5c1c,x
			CMP #$0
			BNE e136q1
			LDA $178,x
e136q1			STA $5c1c,x
			DEC $5c1a,x	;弹仓-1
			JMP e099ext
			
e136ext			LDA #$0
			STA $5c1c,x
			
e099ext			LDA $a0,x
			AND #$03
			TAY
			RTS;-
			

;2018.9.22
;pppoe
;+ppu显示弹仓
d413			JSR $d8fd
			JSR 内存修改
			LDA $80	;场景判断
			CMP #$0
			BEQ d413ext
			LDA $105
			CMP #$70
			BNE +
			LDA #$0
			STA $80
			JMP d413ext
			
+			TXA
			PHA
			JSR 十进制
			
			;LDA $a8
			;CMP #$0
			;BEQ d4132
			
			LDA #$22	;1p显示地址设置
			STA $2006
			LDA #$7d
			STA $2006
			JSR 数据写入1
			
d4132			;LDA $a9		;判断2p是否存在
			;CMP #$0
			;BEQ d4131
			
			LDA #$22	;2p显示地址设置
			STA $2006
			LDA #$dd
			STA $2006
			JSR 数据写入2
			
			;LDA #$0
			;STA $2005
			
d4131			PLA
			TAX
			;JSR 调色板
d413ext			LDA $4d
			RTS
			
d413d1			.db $0F,$18,$27,$38,$0F,$0A,$1B,$3B,$0F,$0C,$10,$20,$F0,$04,$16,$20
数据写入1		LDX #$1
数据q1			LDA $5c20,x	;弹仓显示地址
			JSR 检测1p
			CLC
			ADC #$6e
			STA $2007
			DEX
			BPL 数据q1
			RTS
			
数据写入2		LDX #$1
数据q2			LDA $5c23,x	;弹仓显示地址
			JSR 检测2p
			CLC
			ADC #$6e
			STA $2007
			DEX
			BPL 数据q2			
			RTS
			
检测1p			CMP #$0
			BEQ +
			RTS
+			CPX #$1
			BEQ +
			
			PHA
			LDA $5c21
			CMP #$0
			BEQ ++
			PLA
			RTS
++			PLA
+			LDA #$a3
			RTS
			
检测2p			CMP #$0
			BEQ +
			RTS
+			CPX #$1
			BEQ +
			
			PHA
			LDA $5c24
			CMP #$0
			BEQ ++
			PLA
			RTS
++			PLA
+			LDA #$a3
			RTS
;-
			
			
;2018.9.22
;析弱，pppoe
;+十进制转换
十进制			TXA
			PHA
			LDA #$0		;1p十进制转换
			sta $40
			sta $41
			sta $42

 			LDA $5c1a
 			JSR s100
 			LDX #$2
十进制1			LDA $40,x
 			STA $5c20,x
 			DEX
 			BPL 十进制1
 			
 			LDA #$0		;2p十进制转换
			sta $40
			sta $41
			STA $42
			
 			LDA $5c1b
 			JSR s100
 			LDX #$2
十进制2			LDA $40,x
 			STA $5c23,x
 			DEX
 			BPL 十进制2
 			PLA
 			TAX
 			RTS

s100
			CMP #$64	;百位判断
			BCC s200
			sec
			sbc #$64
			inc $42
			jmp s100

s200
			CMP #$0A	;10位判断
			BCC s300
			sec
			sbc #$0A
			inc $41
			jmp s200

s300
			STA $40		;个位数写入
			rts;-
			

;2018.11.24
;粉墨
内存修改
LDA $6
CMP #$0c
BEQ neicun
RTS
;+常量===============
temp=$0
s=temp+2
step_s=s+1
spr=$5c00
addr=$1A0
chr_io=$5127
chr=$0
tile=$0
joy=$06

key_a	=@1
key_b	=@10
key_se	=@100
key_st	=@1000
key_up	=@10000
key_down=@100000
key_l	=@1000000
key_r	=@10000000
;-====================
neicun	LDA #0
	sta $2000		;关闭NMI中断
	LDA temp		;开辟4字节临时变量
	PHA
	LDA temp+1
	PHA
	LDA s
	PHA
	LDA step_s
	PHA
-	LDA $2002		;等待一帧
	bpl -
	JSR call_get_input
	LDA joy			;并等待按键弹起
	BNE -
	JSR call_addr_exists
;====================================================		
	JSR call_read		;读内存显示精灵
	JSR call_set_ppu	;设置PPU
	JMP step		;帧事件
	
;+step;帧事件=====================
step	;帧事件
	LDA #>spr		;刷新精灵
-	STA $4014
	LDA $2002		;等待帧
	BPL *-3
	JSR call_cop		;安全提醒和选中位置高亮
	JSR call_get_input	;读键
	JSR call_set_s
	JSR call_set_ram
	

	JMP step
	
;-====================================================	
	
;+call_tab	;格式化为表格======================
call_tab	;格式化为表格
	LDX #0
	LDY #0
-	TXA
	STY temp
	LSR
	LSR
	LSR
	STA temp+1
	ASL
	ADC temp+1		;加行间距
	ASL
	ASL
	CLC
	ADC #64
	STA spr,Y		;写入Y坐标
	
	TXA
	AND #@111
	TAY
	LDA XX,Y
	LDY temp
	STA spr+3,Y		;写入X坐标
	
	INX
	INY
	INY
	INY
	INY
	BNE -
	
;调整地址显示坐标
	LDA #$60
	STA spr+11
	LDA #$68
	STA spr+15
	RTS
XX .HEX	50 58	68 70	80 88	98 A0
;-====================================================
;+call_set_ppu	;设置PPU===================
call_set_ppu	;设置PPU
	LDA #$0
	STA $5101		;c5切chr
	LDA #chr
	STA chr_io
	LDA #@10000
	STA $2001		;只显示精灵
-	LDA $2002		;设置颜色
	BPL -
	LDA #$3f
	STA $2006
	LDA #$10
	STA $2006
	LDX #0
-	LDA color,X
	STA $2007
	INX
	CPX #$10
	BNE -
	RTS
color .HEX 0F120F0F 0F150F0F 0F260F0F 0F260F0F
;-====================================================
;+call_read;读内存设置精灵属性===========
call_read		;读内存设置精灵属性
;精灵属性置0
call_spr0	LDA s	;设置为选中【地址】
		AND #3
		STA s
		LDX #0
		TXA
-		STA spr,X
		INX
		BNE -
	
	JSR call_tab		;格式化为表格
	
aaa	LDA addr+1
	STA temp
	AND #$0f
	ORA #tile
	STA spr+13
	LDA temp
	LSR
	LSR
	LSR
	LSR
	AND #$0f
	ORA #tile
	sta spr+9
	LDA addr
	STA temp+1
	AND #$0f
	ORA #tile
	STA spr+5
	LDA temp+1
	LSR
	LSR
	LSR
	LSR
	AND #$0f
	ORA #tile
	sta spr+1
	
	
	LDY #29;循环次数30
-	TYA			;读取内存
	ASL
	ASL
	ASL
	TAX
	LDA (temp),y
+	AND #$0f		;内存值低位
	ORA #tile
	STA spr+21,x
	LDA (temp),y
+	AND #$f0		;内存值高位
	LSR
	LSR
	LSR
	LSR
	ORA #tile
	STA spr+17,x
	
	DEY
	BPL -
	RTS
;-====================================================
;+call_wirte写内存
call_wirte
	LDA addr
	STA temp+1
	LDA addr+1
	STA temp

	LDY #29 ;循环30次
-	TYA
	ASL
	ASL
	ASL
	TAX
	LDA spr+2+16,X		;是否已修改
	ORA spr+2+20,X
	AND #@01
	BEQ +
	LDA spr+1+16,X
	ASL
	ASL
	ASL
	ASL
	STA s
	LDA spr+1+20,X
	AND #$0f
	ORA s
	STA (temp),y		;写到内存
+	DEY
	BPL -
	
	PLA			;修改RTS指针
	PLA
	PLA			;恢复现场
	STA step_s
	PLA
	STA s
	PLA
	STA temp+1
	PLA
	STA temp
	LDA #0
	STA joy
-	BIT $2002		;等待帧结束后返回
	BPL -
	JSR 调色板
	
xxxa	LDA #$0
	STA $5101
	LDA #$1
	STA $5127
	RTS
	
调色板	TXA
	PHA
	LDA #$3f
	STA $2006
	LDA #$10
	STA $2006
	LDX #$0
调色板1	LDA d413d1,x
	STA $2007
	INX
	CPX #16
	BNE 调色板1
	PLA
	TAX
	LDA #$0
	STA $2005
	RTS	
;-
;+call_get_input;获取手柄输入状态===========
call_get_input	;获取手柄输入状态
	LDA joy+1
	STA joy+2
	LDX #1
	STX $4016
	DEX
	STX $4016
	LDX #7
-	LDA $4016		;读键
	LSR
	ROR joy+1
	DEX
	BPL -
	LDA joy+1
	EOR joy+2		;处理按键弹起
	AND joy+1
	STA joy
	RTS
;-====================================================
;+call_res_color;重置为未选中颜色===========
call_res_color		;重置颜色
	LDX #63
-	TXA
	ASL
	ASL
	TAY
	LDA spr+2,Y
	AND #@01
	STA spr+2,Y
	DEX
	BPL -
	RTS
;-====================================================
;+call_set_s;设置选中位置===========
call_set_s		;设置选中位置
	LDY #3
-	LDA joy
	AND key_s,y	;是否按下某键
	BEQ ++
	LDA s
	CLC			;S+ks
	ADC ks,y
	AND #63
	STA s
	JSR call_res_color
++	DEY
	BPL -
	RTS
	
key_s	.DB key_r, key_l, key_up, key_down
ks	.DB 1,256-1,256-8,8
;-====================================================
;+call_set_ram;修改内存===========
call_set_ram		;修改内存
	LDY #1
-	LDA joy
	AND key_ab,y	;是否按下a或b键
	BEQ ++
	LDA s	
	ASL		
	ASL
	TAX
	LDA spr+1,x	;调整内存
	CLC
	ADC lnc,y
	AND #$0f
	ORA #tile
	STA spr+1,x
	LDA spr+2,x
	ORA #01
	STA spr+2,x
	
	LDA s		;选中【地址】
	CMP #4
	BCS ++
	LDA spr+5
	AND #$0f
	STA temp
	LDA spr+1
	ASL
	ASL
	ASL
	ASL
	ORA temp
	STA addr	;修改地址
	LDA spr+13
	AND #$0f
	STA temp
	LDA spr+9
	ASL
	ASL
	ASL
	ASL
	ORA temp
	STA addr+1
	JSR call_addr_exists	;如果是可写地址则刷新
	BNE ++
	JSR call_read
	
++	DEY
	BPL -
	
	LDA joy
	AND #key_se		;SE键
	BEQ *+5
	JSR call_read

	LDA joy
	CMP #key_st		;ST键
	BNE *+5
	JMP call_wirte

	RTS
key_ab	.DB key_a, key_b
lnc	.DB 1,256-1
;-====================================================
;+call_cop;安全提醒和选中位置高亮
call_cop
	INC step_s
	LDA s
	ASL
	ASL
	TAY
	CMP #4*4
	BCS +
	JSR call_addr_exists
	BEQ +
	LDA step_s
	LSR
	AND #@11
	JMP ++
+	
	LDA spr+2,Y
	ORA #@10
++	STA spr+2,Y
	RTS	
;-
;+call_addr_exists是否可写内存区域
call_addr_exists
	LDA addr
	BNE +
	LDA #2
	CMP addr+1
	BCC +
	STA addr+1
+	
	LDX #0
-	LDA #0
	STA temp
	LDA addr
	CMP addr_start_h,x	;高字节>=最低限制
	BCS *+4
	INC temp
	CMP addr_end_h,x	;;高字节<最高限制
	BCC *+4
	INC temp
	
	LDA temp
	BEQ +
	
	
	INX
	CPX #addr_end_h - addr_start_h
	BCC -
	LDA temp
+	RTS
addr_start_h	.HEX 00 60
addr_end_h	.HEX 08 80
	
;--

						